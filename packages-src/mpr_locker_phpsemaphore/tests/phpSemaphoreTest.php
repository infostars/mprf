<?php
namespace mpr\locker;

use \mpr\locker\phpSemaphore;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-11-20 at 12:30:42.
 */
class phpSemaphoreTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var phpSemaphore
     */
    protected $object;

    /**
     * Test driver name
     *
     * @var string
     */
    protected $driver_name = "cache_semaphore";

    /**
     * Test method name
     *
     * @var int
     */
    protected $test_key_id = 111;

    /**
     * Test lock key
     *
     * @var int
     */
    protected $test_lock_key = 10;

    /**
     * Test data
     *
     * @var string
     */
    protected $test_data = "test data";

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new phpSemaphore($this->test_lock_key);
    }

    /**
     * @covers mpr\locker\phpSemaphore::getLockKey
     */
    public function testGetLockKey()
    {
        $this->assertInternalType('resource', $this->object->getLockKey($this->test_lock_key));
    }

    /**
     * @covers mpr\locker\phpSemaphore::lock
     */
    public function testLock()
    {
        $this->object->lock($this->test_key_id);
        $this->assertTrue($this->object->locked($this->test_key_id));
    }

    /**
     * @covers mpr\locker\phpSemaphore::unlock
     * @depends testLock
     */
    public function testUnlock()
    {
        $this->testLock();
        $this->object->unlock($this->test_key_id);
        $this->assertFalse($this->object->locked($this->test_key_id));
    }

    /**
     * @covers mpr\locker\phpSemaphore::locked
     * @depends testLock
     */
    public function testLocked()
    {
        $this->testLock();
        $this->assertTrue($this->object->locked($this->test_key_id));
        $this->object->unlock($this->test_key_id);
        $this->assertFalse($this->object->locked($this->test_key_id));

        $not_cached_id = 222;
        $this->assertFalse($this->object->locked($not_cached_id));
    }

    /**
     * @covers mpr\locker\phpSemaphore::storeLockedData
     */
    public function testStoreLockedData()
    {
        $lock_key = $this->object->getLockKey($this->test_lock_key);
        $this->object->storeLockedData($lock_key, $this->test_data);
    }

    /**
     * @covers mpr\locker\phpSemaphore::getLockedData
     */
    public function testGetLockedData()
    {
        $this->testStoreLockedData();
        $lock_key = $this->object->getLockKey($this->test_lock_key);
        $locked_data = $this->object->getLockedData($lock_key);
        $this->assertEquals($this->test_data, $locked_data);
    }
}
