<?php
namespace mpr\net;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-25 at 10:20:46.
 */
class socketClientTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var socketClient
     */
    protected $object;

    protected $test_host = '127.0.0.1';
    protected $test_port = 22;
    protected $test_pause = 500;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new socketClient();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->object->disconnect();
    }

    /**
     * @covers mpr\net\socketClient::setHost
     */
    public function testSetHost()
    {
        $this->object->setHost($this->test_host);
    }

    /**
     * @covers mpr\net\socketClient::getHost
     * @depends testSetHost
     */
    public function testGetHost()
    {
        $this->object->setHost($this->test_host);
        $this->assertEquals($this->test_host, $this->object->getHost());
    }

    /**
     * @covers mpr\net\socketClient::setPort
     */
    public function testSetPort()
    {
        $this->object->setPort($this->test_port);
    }

    /**
     * @covers mpr\net\socketClient::getPort
     * @depends testSetPort
     */
    public function testGetPort()
    {
        $this->object->setPort($this->test_port);
        $this->assertEquals($this->test_port, $this->object->getPort());
    }

    /**
     * @covers mpr\net\socketClient::setPause
     */
    public function testSetPause()
    {
        $this->object->setPause($this->test_pause);
    }

    /**
     * @covers mpr\net\socketClient::getPause
     * @depends testSetPause
     */
    public function testGetPause()
    {
        $this->object->setPause($this->test_pause);
        $this->assertEquals($this->test_pause, $this->object->getPause());
    }

    /**
     * @covers mpr\net\socketClient::setName
     */
    public function testSetName()
    {
        $this->object->setName("Socket Client Test Name");
    }

    /**
     * @covers mpr\net\socketClient::connect
     * @depends testSetHost
     * @depends testSetPort
     * @depends testSetName
     * @depends testSetPause
     */
    public function testConnect()
    {
        $this->testSetHost();
        $this->testSetPort();
        $this->testSetName();
        $this->testSetPause();
        $this->object->connect();
    }

    /**
     * @covers mpr\net\socketClient::isConnected
     * @depends testConnect
     */
    public function testIsConnected()
    {
        $this->testConnect();
        $this->assertTrue($this->object->isConnected());
    }

    /**
     * @covers mpr\net\socketClient::disconnect
     * @depends testIsConnected
     */
    public function testDisconnect()
    {
        $this->testIsConnected();
        $this->object->disconnect();
        $this->assertFalse($this->object->isConnected());
    }

    /**
     * @covers mpr\net\socketClient::reconnect
     * @depends testDisconnect
     */
    public function testReconnect()
    {
        $this->testDisconnect();
        $this->object->reconnect();
        $this->assertTrue($this->object->isConnected());
    }

    /**
     * @covers mpr\net\socketClient::getPeerName
     */
    public function testGetPeerName()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers mpr\net\socketClient::sendData
     * @todo   Implement testSendData().
     */
    public function testSendData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers mpr\net\socketClient::writeData
     * @todo   Implement testWriteData().
     */
    public function testWriteData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers mpr\net\socketClient::shutdown
     * @todo   Implement testShutdown().
     */
    public function testShutdown()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers mpr\net\socketClient::recvData
     * @todo   Implement testRecvData().
     */
    public function testRecvData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers mpr\net\socketClient::readData
     * @todo   Implement testReadData().
     */
    public function testReadData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers mpr\net\socketClient::setBlocking
     * @todo   Implement testSetBlocking().
     */
    public function testSetBlocking()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers mpr\net\socketClient::setOnConnect
     * @todo   Implement testSetOnConnect().
     */
    public function testSetOnConnect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers mpr\net\socketClient::setOnEveryCycle
     * @todo   Implement testSetOnEveryCycle().
     */
    public function testSetOnEveryCycle()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }
}
