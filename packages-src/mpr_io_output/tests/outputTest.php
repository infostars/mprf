<?php
namespace mpr\io;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-21 at 13:21:35.
 */
class outputTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var output
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new output(false, output::OUT_OUTPUT);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers mpr\io\output::write
     */
    public function testWrite()
    {
        $test_string = "some text to output";
        ob_start();
        $this->object->write($test_string);
        $result = ob_get_contents();
        ob_end_clean();
        $this->assertEquals($test_string, $result);
    }

    /**
     * @covers mpr\io\output::writeLn
     */
    public function testWriteLn()
    {
        $test_string = "some text to output with line endings";
        ob_start();
        $this->object->writeLn($test_string);
        $result = ob_get_contents();
        ob_end_clean();
        $this->assertEquals("{$test_string}\n", $result);
    }

    /**
     * @covers mpr\io\output::writeException
     */
    public function testWriteException()
    {
        $test_string = "some my exception text";
        $error = new \Exception($test_string);
        ob_start();
        $this->object->writeException($error);
        $result = ob_get_contents();
        ob_end_clean();
        $this->assertContains($test_string, $result);
    }

    /**
     * @covers mpr\io\output::close
     */
    public function testClose()
    {
        $e = null;
        $this->object->close();
        try {
            $this->object->writeLn("some text");
        } catch(\Exception $e) {

        }
        $this->assertInstanceOf("\\Exception", $e);
    }
}
