<?php
namespace mpr\io;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-21 at 13:04:04.
 */
class inputTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var input
     */
    protected $object;

    protected $test_argv = ['argv', '--foo=bar', '--lol', '--int=15', '--float=15.2', '--string=20'];
    protected $test_arguments = [
        "foo" => "bar",
        "lol" => true,
        "int" => 15,
        "float" => 15.2,
        "string" => "20"
    ];
    protected $test_array_arguments = [
        "array" => ["some", "data", "in", "array"]
    ];

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new input();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers mpr\io\input::importArgs
     */
    public function testImportArgs()
    {
        $imported = $this->object->importArgs($this->test_argv);
        ksort($imported);
        ksort($this->test_arguments);
        $this->assertEquals($this->test_arguments, $imported);
    }

    /**
     * @covers mpr\io\input::setArguments
     */
    public function testSetArguments()
    {
        $this->object->setArguments($this->test_arguments);
        $this->assertEquals($this->test_arguments, $this->object->export());
    }

    /**
     * @covers mpr\io\input::getString
     * @depends testSetArguments
     */
    public function testGetString()
    {
        $this->object->setArguments($this->test_arguments);
        $this->assertEquals($this->test_arguments['string'], $this->object->getString('string'));
    }

    /**
     * @covers mpr\io\input::importArguments
     * @depends testGetString
     */
    public function testImportArguments()
    {
        $test_key = "get_key";
        $test_value = "get_value";
        $_GET['get_key'] = "get_value";
        $this->object->importArguments(input::SC_GET, true);
        $this->assertEquals($test_value, $this->object->getString($test_key));
    }

    /**
     * @covers mpr\io\input::export
     * @depends testSetArguments
     */
    public function testExport()
    {
        $this->object->setArguments($this->test_arguments);
        $this->assertEquals($this->test_arguments, $this->object->export());
    }

    /**
     * @covers mpr\io\input::getBoolean
     * @depends testSetArguments
     */
    public function testGetBoolean()
    {
        $this->object->setArguments($this->test_arguments);
        $this->assertEquals($this->test_arguments['lol'], $this->object->getBoolean('lol'));
    }

    /**
     * @covers mpr\io\input::getInteger
     * @depends testSetArguments
     */
    public function testGetInteger()
    {
        $this->object->setArguments($this->test_arguments);
        $this->assertEquals($this->test_arguments['int'], $this->object->getInteger('int'));
    }

    /**
     * @covers mpr\io\input::getFloat
     * @depends testSetArguments
     */
    public function testGetFloat()
    {
        $this->object->setArguments($this->test_arguments);
        $this->assertEquals($this->test_arguments['float'], $this->object->getFloat('float'));
    }

    /**
     * @covers mpr\io\input::getArray
     * @depends testSetArguments
     */
    public function testGetArray()
    {
        $this->object->setArguments($this->test_array_arguments);
        $this->assertEquals($this->test_array_arguments['array'], $this->object->getArray('array'));
    }
}
